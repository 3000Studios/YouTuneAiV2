#!/usr/bin/env python3
"""
SFTP Connection Test for YouTuneAI
"""
import paramiko
import sys

def test_sftp_connection():
    """Test SFTP connection to the server"""
    try:
        print("üîç Testing SFTP connection...")
        
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        
        # Try different credential sets
        credential_sets = [
            {
                'hostname': 'access-5017098454.webspace-host.com',
                'username': 'u98387750',
                'password': 'YouTuneAi$2025',
                'port': 22
            },
            {
                'hostname': 'access-5017098454.webspace-host.com',
                'username': 'a132096',
                'password': 'Gabby3000!!!',
                'port': 22
            }
        ]
        
        for i, creds in enumerate(credential_sets):
            try:
                print(f"üîê Trying credential set {i+1}...")
                ssh.connect(
                    hostname=creds['hostname'],
                    username=creds['username'],
                    password=creds['password'],
                    port=creds['port'],
                    timeout=30
                )
                print(f"‚úÖ SSH connection successful with credential set {i+1}!")
                print(f"   Username: {creds['username']}")
                break
            except Exception as e:
                print(f"‚ùå Credential set {i+1} failed: {e}")
                if i == len(credential_sets) - 1:
                    raise Exception("All credential sets failed")
        
        print("‚úÖ SSH connection successful!")
        
        # Test SFTP
        sftp = ssh.open_sftp()
        print("‚úÖ SFTP connection successful!")
        
        # List root directory
        try:
            root_files = sftp.listdir('/')
            print(f"üìÅ Root directory files ({len(root_files)} items):")
            for file in root_files[:10]:  # Show first 10 files
                print(f"   - {file}")
            if len(root_files) > 10:
                print(f"   ... and {len(root_files) - 10} more files")
        except Exception as e:
            print(f"‚ö†Ô∏è Could not list root directory: {e}")
        
        # Check for WordPress installation
        wp_paths = ['/', '/public_html', '/htdocs', '/www', '/web']
        wp_found = False
        
        for path in wp_paths:
            try:
                files = sftp.listdir(path)
                wp_indicators = ['wp-config.php', 'wp-admin', 'wp-content', 'wp-includes']
                found_indicators = [indicator for indicator in wp_indicators if indicator in files]
                
                if found_indicators:
                    print(f"üéØ WordPress found in {path}!")
                    print(f"   Found: {found_indicators}")
                    wp_found = True
                    
                    # Check wp-content/themes directory
                    try:
                        themes_path = f"{path}/wp-content/themes" if path != '/' else "/wp-content/themes"
                        themes = sftp.listdir(themes_path)
                        print(f"üìÇ Themes directory ({len(themes)} themes):")
                        for theme in themes:
                            print(f"   - {theme}")
                    except Exception:
                        print("‚ö†Ô∏è Could not access themes directory")
                    
                    break
                    
            except Exception:
                continue
        
        if not wp_found:
            print("‚ö†Ô∏è WordPress installation not found in common directories")
        
        # Test upload capability
        try:
            test_content = "# YouTuneAI Test File\nGenerated by connection test"
            with sftp.open('/test_upload.txt', 'w') as test_file:
                test_file.write(test_content)
            print("‚úÖ Upload test successful!")
            
            # Clean up test file
            sftp.remove('/test_upload.txt')
            print("‚úÖ File cleanup successful!")
            
        except Exception as e:
            print(f"‚ö†Ô∏è Upload test failed: {e}")
        
        sftp.close()
        ssh.close()
        
        print("üéâ SFTP connection test completed successfully!")
        return True
        
    except Exception as e:
        print(f"‚ùå SFTP connection test failed: {e}")
        return False

if __name__ == "__main__":
    success = test_sftp_connection()
    sys.exit(0 if success else 1)
